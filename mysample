
- block:
    - name: Checking spark manifest input file
      stat:
        path: "{{ gitlab_project_dir }}/spark_inputs/spark_manifest_parameters.yaml"
      when: spark_enabled
      register: spark_manifest_params

    - name: Set spark_params_file presence
      set_fact:
        spark_params_file: "{{ true if spark_manifest_params.stat.exists else false }}"
      when: spark_enabled

    - name: Failing this play when spark_manifest_parameters.yaml not exists in spark_inputs folder (SPARK)
      fail:
        msg: "File spark_manifest_parameters.yaml not exists in spark_inputs folder. Please check your repo"
      when: spark_enabled | bool and not spark_params_file

    - name: Checking main pom.xml file presence for mvn build
      stat:
        path: "{{ gitlab_project_dir }}/pom.xml"
      when: use_scala
      register: mvn_main_pom_xml

    - name: Set main maven pom.xml file presence
      set_fact:
        main_pom_file_exists: "{{ true if mvn_main_pom_xml.stat.exists else false }}"
      when: use_scala

    - name: Execute script and set variable
      shell: |
        for profile in $(awk '/<id>/{flag=1; next} /<\/id>/{flag=0} flag' {{ gitlab_project_dir }}/pom.xml); do  echo $profile ; done
      register: mvn_profile_check

    - name: Multi Module maven profile status output
      debug:
        msg: "{{ mvn_profile_check.stdout }}"
      when: scala_multi_module | bool

    - name: Check and set mvn multi module profile presence as status
      set_fact:
        mvn_multimodule_profile: >-
          {{ 'true' if  kfp_manifest_var_multi_module_prj in mvn_profile_check.stdout.split() else 'false'}}
      when: scala_multi_module | bool

    - name: Checking src folder exists in root folder for maven normal build
      stat:
        path: "{{ gitlab_project_dir }}/src/main/resources"
      when: not scala_multi_module
      register: check_mvn_src_normal

    - name: Print src folder status for maven normal build
      debug:
        msg: |
          mvn_multimodule_src_check_path: "{{ gitlab_project_dir }}/src/main/resources"
          mvn_normal_src_folder: "{{ check_mvn_src_normal.stat.exists }}"
      when: not scala_multi_module

    - name: Checking src folder exists in module directory for maven multi module build
      stat:
        path: "{{ gitlab_project_dir }}/{{ kfp_manifest_var_multi_module_prj }}/src/main/resources"
      when: scala_multi_module
      register: check_mvn_src_multimodule

    - name: Print src folder status for maven multimodule build
      debug:
        msg: |
          mvn_multimodule_src_check_path: "{{ gitlab_project_dir }}/{{ kfp_manifest_var_multi_module_prj }}/src/main/resources"
          mvn_multimodule_src_folder: "{{ check_mvn_src_multimodule.stat.exists }}"
      when: scala_multi_module

    - name: Set the jarname - Maven build (Normal)
      shell: |
        if [ -z {{ kfp_manifest_var_multi_module_prj }} ]; then
          pkg=$(grep -oPm1 "(?<=<packaging>)[^<]+" {{ gitlab_project_dir }}/pom.xml)
          artId=$(grep -oPm1 "(?<=<artifactId>)[^<]+" {{ gitlab_project_dir }}/pom.xml)
          verId=$(grep -oPm1 "(?<=<version>)[^<]+" {{ gitlab_project_dir }}/pom.xml)
          echo "$artId-$verId.$pkg"
        else
          artId=$(sed -n '/<parent>/,/<\/parent>/d; /<plugin>/,/<\/plugin>/d; /<dependency>/,/<\/dependency>/d; /<artifactId>/ { s/.*<artifactId>\(.*\)<\/artifactId>.*/\1/; p; q }' {{ gitlab_project_dir }}/{{ kfp_manifest_var_multi_module_prj }}/pom.xml)
          verId=$(sed -n '/<plugin>/,/<\/plugin>/d; /<dependency>/,/<\/dependency>/d; /<version>/ { s/.*<version>\(.*\)<\/version>.*/\1/; p; q }' {{ gitlab_project_dir }}/{{ kfp_manifest_var_multi_module_prj }}/pom.xml)
          echo "$artId-$verId.jar"
        fi
      register: jar_name
      when: use_scala | bool

    - name: Set Jar file name
      set_fact:
        mvn_jar_name: "{{ jar_name.stdout | default('') }}"
      when: use_scala | bool

    - name: Show project build related variables
      debug:
        msg: |
          spark_enabled: "{{ spark_enabled }}"
          scala_enabled: "{{ scala_enabled }}"
          kfp_base_maven_repo: "{{ kfp_base_maven_repo }}"
          scala_pom_file_exists: "{{ main_pom_file_exists | default ('scala_set_false')  }}"
          scala_multi_module: "{{ scala_multi_module }}"
          kfp_manifest_var_multi_module_prj: "{{ kfp_manifest_var_multi_module_prj }}"
          mvn_jar_name: "{{ mvn_jar_name | default ('scala_set_false') }}"

    - name: Write facts to project_facts.yml
      delegate_to: localhost
      copy:
        content: |
          spark_enabled: "{{ spark_enabled }}"
          scala_enabled: "{{ scala_enabled }}"
          kfp_base_maven_repo: "{{ kfp_base_maven_repo }}"
          scala_pom_file_exists: "{{ main_pom_file_exists | default ('scala_set_false') }}"
          scala_multi_module: "{{ scala_multi_module }}"
          kfp_manifest_var_multi_module_prj: "{{ kfp_manifest_var_multi_module_prj }}"
          mvn_jar_name: "{{ mvn_jar_name | default ('scala_set_false') }}"
        dest: "{{ ansible_vars_dir }}/project_facts.yml"

    - name: Failing this play as use_scala is set to true but main pom file not exists in root folder (Maven)
      fail:
        msg: "Fail to pass the maven build as main pom.xml file does not exists in your repo when use_scala is true"
      when: use_scala | bool and not main_pom_file_exists

    - name: Failing this play as folder src/main/resources folder not found in root folder ( Maven Normal build )
      fail:
        msg: "Fail to pass the maven build as src folder not exists in root path"
      when: use_scala and ( ( not scala_multi_module ) and  ( not check_mvn_src_normal.stat.exists ) )

    - name: Failing this play as multimodule profile was not mentioned in main pom.xml file ( Maven Multi module build )
      fail:
        msg: "Scala is enabled using use_scala and multi module environment value is set using KFP_MANIFEST_VAR_MULTI_MODULE_PRJ in .gitlab-ci.yml but module profile not configured in main pom.xml"
      when: scala_multi_module and not mvn_multimodule_profile

    - name: Failing this play as folder src/main/resources not found in module folder for ( Maven Multi module build )
      fail:
        msg: "Failing this play as folder src/main/resources not found in module folder for maven multimodule build"
      when: scala_multi_module | bool and not check_mvn_src_multimodule.stat.exists

    - name: Generate maven settings from template file
      register: maven_config
      template:
        src: "{{ playbook_dir }}/roles/build_project_image/templates/maven_settings.xml.j2"
        dest: "{{ gitlab_project_dir }}/maven_settings.xml"
        mode: 777
      vars:
        kfp_base_maven_repo: "{{ kfp_base_maven_repo }}"
        artf_svc_acct: "{{ artf_svc_acct }}"
        artf_svc_token: "{{ artf_svc_token }}"

    - name: Maven normal build
      shell: |
        mvn -U clean package {{ maven_cli_opts }}
      args:
        chdir: "{{ gitlab_project_dir }}"
      register: maven_build
      when: not scala_multi_module

    - name: Maven normal build output
      debug:
        msg: "Maven Normal build output: {{ maven_build.stdout }}"
      when: not scala_multi_module

    - name: Maven multi module build
      shell: |
        mvn -U clean package {{ maven_cli_opts }} -P {{ kfp_manifest_var_multi_module_prj }} -DprofileIdEnabled=true
      args:
        chdir: "{{ gitlab_project_dir }}"
      register: maven_multi_build
      when: scala_multi_module

    - name: Multi Module maven build output
      debug:
        msg: "Maven Multi Module build output, maven_multi_build: {{ maven_multi_build.stdout }}"
      when: scala_multi_module

  when: scala_enabled | bool
