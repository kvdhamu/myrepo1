fetch_spark_logs = dsl.ContainerOp(
    name=spark_logs_job_name,
    image="{{ image }}",
    command=["sh", "-c"],
    arguments=[
        f"echo {submit_spark_job.outputs['driver_pod_name']} > /tmp/driver_pod && "
        f"echo {submit_spark_job.outputs['spark_app_name']} > /tmp/spark_app && "
        "export SPARK_APP_NAME=$(cat /tmp/spark_app) && "
        "export DRIVER_POD_NAME=$(cat /tmp/driver_pod) && "
        "echo 'Checking if SparkApplication $SPARK_APP_NAME exists...'; "
        "if ! kubectl get sparkapplication $SPARK_APP_NAME >/dev/null 2>&1; then "
        "  echo 'Spark Application not found.'; exit 1; fi; "
        "if ! kubectl get pod $DRIVER_POD_NAME >/dev/null 2>&1; then "
        "  echo 'Driver pod not found!'; exit 1; fi; "
        "echo 'Fetching driver pod logs...'; "
        "kubectl logs $DRIVER_POD_NAME > /tmp/driver_pod.log || true; "

        # Get executor states and logs
        "echo 'Fetching executor pod logs and states...'; "
        "kubectl get sparkapplication $SPARK_APP_NAME -o json | "
        "jq -r '.status.executorState | to_entries[] | \"\\(.key):\\(.value)\"' > /tmp/executor_status.txt; "

        "touch /tmp/executor_pods.log; "
        "while read line; do "
        "  POD_NAME=$(echo $line | cut -d':' -f1); "
        "  STATUS=$(echo $line | cut -d':' -f2); "
        "  echo \"===== Executor Pod: $POD_NAME (Status: $STATUS) =====\" >> /tmp/executor_pods.log; "
        "  if kubectl get pod $POD_NAME >/dev/null 2>&1; then "
        "    kubectl logs $POD_NAME >> /tmp/executor_pods.log 2>&1 || echo 'Log fetch failed' >> /tmp/executor_pods.log; "
        "  else "
        "    echo 'Executor pod not found!' >> /tmp/executor_pods.log; "
        "  fi; "
        "  echo -e '\\n' >> /tmp/executor_pods.log; "
        "done < /tmp/executor_status.txt; "

        "STATUS=$(kubectl get sparkapplication $SPARK_APP_NAME -o jsonpath='{.status.applicationState.state}'); "
        "if [ \"$STATUS\" = \"COMPLETED\" ]; then "
        "  echo 'Spark job succeeded!'; exit 0; "
        "elif [ \"$STATUS\" = \"FAILED\" ]; then "
        "  echo 'Spark job failed!'; exit 1; "
        "fi"
    ],
    file_outputs={
        "driver_logs": "/tmp/driver_pod.log",
        "executor_logs": "/tmp/executor_pods.log"
    }
)
